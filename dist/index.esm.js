import"colors";import{readFileSync as e,existsSync as t,promises as o,mkdirSync as r,writeFileSync as i}from"fs";import s,{join as n,posix as a}from"path";import{HttpsProxyAgent as l}from"https-proxy-agent";import c from"prompts";import p from"dotenv";import{z as h}from"zod";import{fileURLToPath as u}from"url";import d from"http";import g from"https";import{Pool as m}from"tarn";import{v4 as f}from"uuid";import v from"puppeteer";import{JSDOM as y}from"jsdom";import b from"dompurify";import w from"cors";import E from"express";import T from"multer";import S from"express-rate-limit";const x={core:["highcharts","highcharts-more","highcharts-3d"],modules:["stock","map","gantt","exporting","parallel-coordinates","accessibility","boost-canvas","boost","data","data-tools","draggable-points","static-scale","broken-axis","heatmap","tilemap","tiledwebmap","timeline","treemap","treegraph","item-series","drilldown","histogram-bellcurve","bullet","funnel","funnel3d","geoheatmap","pyramid3d","networkgraph","overlapping-datalabels","pareto","pattern-fill","pictorial","price-indicator","sankey","arc-diagram","dependency-wheel","series-label","series-on-point","solid-gauge","sonification","streamgraph","sunburst","variable-pie","variwide","vector","venn","windbarb","wordcloud","xrange","no-data-to-display","drag-panes","debugger","dumbbell","lollipop","cylinder","organization","dotplot","marker-clusters","hollowcandlestick","heikinashi","flowmap","export-data","navigator","textpath"],indicators:["indicators-all"],custom:["https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js","https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.45/moment-timezone-with-data.min.js"]},R={puppeteer:{args:{value:["--allow-running-insecure-content","--ash-no-nudges","--autoplay-policy=user-gesture-required","--block-new-web-contents","--disable-accelerated-2d-canvas","--disable-background-networking","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-breakpad","--disable-checker-imaging","--disable-client-side-phishing-detection","--disable-component-extensions-with-background-pages","--disable-component-update","--disable-default-apps","--disable-dev-shm-usage","--disable-domain-reliability","--disable-extensions","--disable-features=CalculateNativeWinOcclusion,InterestFeedContentSuggestions,WebOTP","--disable-hang-monitor","--disable-ipc-flooding-protection","--disable-logging","--disable-notifications","--disable-offer-store-unmasked-wallet-cards","--disable-popup-blocking","--disable-print-preview","--disable-prompt-on-repost","--disable-renderer-backgrounding","--disable-search-engine-choice-screen","--disable-session-crashed-bubble","--disable-setuid-sandbox","--disable-site-isolation-trials","--disable-speech-api","--disable-sync","--enable-unsafe-webgpu","--hide-crash-restore-bubble","--hide-scrollbars","--metrics-recording-only","--mute-audio","--no-default-browser-check","--no-first-run","--no-pings","--no-sandbox","--no-startup-window","--no-zygote","--password-store=basic","--process-per-tab","--use-mock-keychain"],type:"string[]",description:"Arguments array to send to Puppeteer."}},highcharts:{version:{value:"latest",type:"string",envLink:"HIGHCHARTS_VERSION",description:"The Highcharts version to be used."},cdnURL:{value:"https://code.highcharts.com/",type:"string",envLink:"HIGHCHARTS_CDN_URL",description:"The CDN URL for Highcharts scripts to be used."},coreScripts:{value:x.core,type:"string[]",envLink:"HIGHCHARTS_CORE_SCRIPTS",description:"The core Highcharts scripts to fetch."},moduleScripts:{value:x.modules,type:"string[]",envLink:"HIGHCHARTS_MODULE_SCRIPTS",description:"The modules of Highcharts to fetch."},indicatorScripts:{value:x.indicators,type:"string[]",envLink:"HIGHCHARTS_INDICATOR_SCRIPTS",description:"The indicators of Highcharts to fetch."},customScripts:{value:x.custom,type:"string[]",description:"Additional custom scripts or dependencies to fetch."},forceFetch:{value:!1,type:"boolean",envLink:"HIGHCHARTS_FORCE_FETCH",description:"The flag to determine whether to refetch all scripts after each server rerun."},cachePath:{value:".cache",type:"string",envLink:"HIGHCHARTS_CACHE_PATH",description:"The path to the cache directory. It is used to store the Highcharts scripts and custom scripts."}},export:{infile:{value:!1,type:"string",description:"The input file should include a name and a type (json or svg). It must be correctly formatted as a JSON or SVG file."},instr:{value:!1,type:"string",description:"Input, provided in the form of a stringified JSON or SVG file, will override the --infile option."},options:{value:!1,type:"string",description:"An alias for the --instr option."},outfile:{value:!1,type:"string",description:"The output filename along with a type (jpeg, png, pdf, or svg). This will ignore the --type flag."},type:{value:"png",type:"string",envLink:"EXPORT_TYPE",description:"The file export format. It can be jpeg, png, pdf, or svg."},constr:{value:"chart",type:"string",envLink:"EXPORT_CONSTR",description:"The constructor to use. Can be chart, stockChart, mapChart, or ganttChart."},defaultHeight:{value:400,type:"number",envLink:"EXPORT_DEFAULT_HEIGHT",description:"the default height of the exported chart. Used when no value is set."},defaultWidth:{value:600,type:"number",envLink:"EXPORT_DEFAULT_WIDTH",description:"The default width of the exported chart. Used when no value is set."},defaultScale:{value:1,type:"number",envLink:"EXPORT_DEFAULT_SCALE",description:"The default scale of the exported chart. Used when no value is set."},height:{value:!1,type:"number",description:"The height of the exported chart, overriding the option in the chart settings."},width:{value:!1,type:"number",description:"The width of the exported chart, overriding the option in the chart settings."},scale:{value:!1,type:"number",description:"The scale of the exported chart, overriding the option in the chart settings. Ranges between 0.1 and 5.0."},globalOptions:{value:!1,type:"string",description:"Either a stringified JSON or a filename containing options to be passed into the Highcharts.setOptions."},themeOptions:{value:!1,type:"string",description:"Either a stringified JSON or a filename containing theme options to be passed into the Highcharts.setOptions."},batch:{value:!1,type:"string",description:'Initiates a batch job with a string containing input/output pairs: "in=out;in=out;...".'},rasterizationTimeout:{value:1500,type:"number",envLink:"EXPORT_RASTERIZATION_TIMEOUT",description:"The duration in milliseconds to wait for rendering a webpage."}},customLogic:{allowCodeExecution:{value:!1,type:"boolean",envLink:"CUSTOM_LOGIC_ALLOW_CODE_EXECUTION",description:"Controls whether the execution of arbitrary code is allowed during the exporting process."},allowFileResources:{value:!1,type:"boolean",envLink:"CUSTOM_LOGIC_ALLOW_FILE_RESOURCES",description:"Controls the ability to inject resources from the filesystem. This setting has no effect when running as a server."},customCode:{value:!1,type:"string",description:"Custom code to execute before chart initialization. It can be a function, code wrapped within a function, or a filename with the .js extension."},callback:{value:!1,type:"string",description:"JavaScript code to run during construction. It can be a function or a filename with the .js extension."},resources:{value:!1,type:"string",description:"Additional resource in the form of a stringified JSON, which may contain files, js, and css sections."},loadConfig:{value:!1,type:"string",legacyName:"fromFile",description:"A file containing a pre-defined configuration to use."},createConfig:{value:!1,type:"string",description:"Enables setting options through a prompt and saving them in a provided config file."}},server:{enable:{value:!1,type:"boolean",envLink:"SERVER_ENABLE",cliName:"enableServer",description:"When set to true, the server starts on the local IP address 0.0.0.0."},host:{value:"0.0.0.0",type:"string",envLink:"SERVER_HOST",description:"The hostname of the server. Additionally, it starts a server on the provided hostname."},port:{value:7801,type:"number",envLink:"SERVER_PORT",description:"The server port when enabled."},benchmarking:{value:!1,type:"boolean",envLink:"SERVER_BENCHMARKING",cliName:"serverBenchmarking",description:"Indicates whether to display the duration, in milliseconds, of specific actions that occur on the server while serving a request."},proxy:{host:{value:!1,type:"string",envLink:"SERVER_PROXY_HOST",cliName:"proxyHost",description:"The host of the proxy server to use, if it exists."},port:{value:8080,type:"number",envLink:"SERVER_PROXY_PORT",cliName:"proxyPort",description:"The port of the proxy server to use, if it exists."},timeout:{value:5e3,type:"number",envLink:"SERVER_PROXY_TIMEOUT",cliName:"proxyTimeout",description:"The timeout for the proxy server to use, if it exists."}},rateLimiting:{enable:{value:!1,type:"boolean",envLink:"SERVER_RATE_LIMITING_ENABLE",cliName:"enableRateLimiting",description:"Enables rate limiting for the server."},maxRequests:{value:10,type:"number",envLink:"SERVER_RATE_LIMITING_MAX_REQUESTS",legacyName:"rateLimit",description:"The maximum number of requests allowed in one minute."},window:{value:1,type:"number",envLink:"SERVER_RATE_LIMITING_WINDOW",description:"The time window, in minutes, for the rate limiting."},delay:{value:0,type:"number",envLink:"SERVER_RATE_LIMITING_DELAY",description:"The delay duration for each successive request before reaching the maximum limit."},trustProxy:{value:!1,type:"boolean",envLink:"SERVER_RATE_LIMITING_TRUST_PROXY",description:"Set this to true if the server is behind a load balancer."},skipKey:{value:!1,type:"string",envLink:"SERVER_RATE_LIMITING_SKIP_KEY",description:"Allows bypassing the rate limiter and should be provided with the skipToken argument."},skipToken:{value:!1,type:"string",envLink:"SERVER_RATE_LIMITING_SKIP_TOKEN",description:"Allows bypassing the rate limiter and should be provided with the skipKey argument."}},ssl:{enable:{value:!1,type:"boolean",envLink:"SERVER_SSL_ENABLE",cliName:"enableSsl",description:"Enables or disables the SSL protocol."},force:{value:!1,type:"boolean",envLink:"SERVER_SSL_FORCE",cliName:"sslForce",legacyName:"sslOnly",description:"When set to true, the server is forced to serve only over HTTPS."},port:{value:443,type:"number",envLink:"SERVER_SSL_PORT",cliName:"sslPort",description:"The port on which to run the SSL server."},certPath:{value:!1,type:"string",envLink:"SERVER_SSL_CERT_PATH",legacyName:"sslPath",description:"The path to the SSL certificate/key file."}}},pool:{minWorkers:{value:4,type:"number",envLink:"POOL_MIN_WORKERS",description:"The number of minimum and initial pool workers to spawn."},maxWorkers:{value:8,type:"number",envLink:"POOL_MAX_WORKERS",legacyName:"workers",description:"The number of maximum pool workers to spawn."},workLimit:{value:40,type:"number",envLink:"POOL_WORK_LIMIT",description:"The number of work pieces that can be performed before restarting the worker process."},acquireTimeout:{value:5e3,type:"number",envLink:"POOL_ACQUIRE_TIMEOUT",description:"The duration, in milliseconds, to wait for acquiring a resource."},createTimeout:{value:5e3,type:"number",envLink:"POOL_CREATE_TIMEOUT",description:"The duration, in milliseconds, to wait for creating a resource."},destroyTimeout:{value:5e3,type:"number",envLink:"POOL_DESTROY_TIMEOUT",description:"The duration, in milliseconds, to wait for destroying a resource."},idleTimeout:{value:3e4,type:"number",envLink:"POOL_IDLE_TIMEOUT",description:"The duration, in milliseconds, after which an idle resource is destroyed."},createRetryInterval:{value:200,type:"number",envLink:"POOL_CREATE_RETRY_INTERVAL",description:"The duration, in milliseconds, to wait before retrying the create process in case of a failure."},reaperInterval:{value:1e3,type:"number",envLink:"POOL_REAPER_INTERVAL",description:"The duration, in milliseconds, after which the check for idle resources to destroy is triggered."},benchmarking:{value:!1,type:"boolean",envLink:"POOL_BENCHMARKING",cliName:"poolBenchmarking",description:"Indicate whether to show statistics for the pool of resources or not."}},logging:{level:{value:4,type:"number",envLink:"LOGGING_LEVEL",cliName:"logLevel",description:"The logging level to be used."},file:{value:"highcharts-export-server.log",type:"string",envLink:"LOGGING_FILE",cliName:"logFile",description:"The name of a log file. The `logToFile` and `logDest` options also need to be set to enable file logging."},dest:{value:"log/",type:"string",envLink:"LOGGING_DEST",cliName:"logDest",description:"The path to store log files. The `logToFile` option also needs to be set to enable file logging."},toConsole:{value:!0,type:"boolean",envLink:"LOGGING_TO_CONSOLE",cliName:"logToConsole",description:"Enables or disables showing logs in the console."},toFile:{value:!0,type:"boolean",envLink:"LOGGING_TO_FILE",cliName:"logToFile",description:"Enables or disables creation of the log directory and saving the log into a .log file."}},ui:{enable:{value:!1,type:"boolean",envLink:"UI_ENABLE",cliName:"enableUi",description:"Enables or disables the user interface (UI) for the export server."},route:{value:"/",type:"string",envLink:"UI_ROUTE",cliName:"uiRoute",description:"The endpoint route to which the user interface (UI) should be attached."}},other:{nodeEnv:{value:"production",type:"string",envLink:"OTHER_NODE_ENV",description:"The type of Node.js environment."},listenToProcessExits:{value:!0,type:"boolean",envLink:"OTHER_LISTEN_TO_PROCESS_EXITS",description:"Decides whether or not to attach process.exit handlers."},noLogo:{value:!1,type:"boolean",envLink:"OTHER_NO_LOGO",description:"Skip printing the logo on a startup. Will be replaced by a simple text."},hardResetPage:{value:!1,type:"boolean",envLink:"OTHER_HARD_RESET_PAGE",description:"Decides if the page content should be reset entirely."},browserShellMode:{value:!0,type:"boolean",envLink:"OTHER_BROWSER_SHELL_MODE",description:"Decides if the browser runs in the shell mode."}},debug:{enable:{value:!1,type:"boolean",envLink:"DEBUG_ENABLE",cliName:"enableDebug",description:"Enables or disables debug mode for the underlying browser."},headless:{value:!0,type:"boolean",envLink:"DEBUG_HEADLESS",description:"Controls the mode in which the browser is launched when in the debug mode."},devtools:{value:!1,type:"boolean",envLink:"DEBUG_DEVTOOLS",description:"Decides whether to enable DevTools when the browser is in a headful state."},listenToConsole:{value:!1,type:"boolean",envLink:"DEBUG_LISTEN_TO_CONSOLE",description:"Decides whether to enable a listener for console messages sent from the browser."},dumpio:{value:!1,type:"boolean",envLink:"DEBUG_DUMPIO",description:"Redirects browser process stdout and stderr to process.stdout and process.stderr."},slowMo:{value:0,type:"number",envLink:"DEBUG_SLOW_MO",description:"Slows down Puppeteer operations by the specified number of milliseconds."},debuggingPort:{value:9222,type:"number",envLink:"DEBUG_DEBUGGING_PORT",description:"Specifies the debugging port."}}},O={puppeteer:[{type:"list",name:"args",message:"Puppeteer arguments",initial:R.puppeteer.args.value.join(","),separator:","}],highcharts:[{type:"text",name:"version",message:"Highcharts version",initial:R.highcharts.version.value},{type:"text",name:"cdnURL",message:"The URL of CDN",initial:R.highcharts.cdnURL.value},{type:"multiselect",name:"coreScripts",message:"Available core scripts",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:R.highcharts.coreScripts.value},{type:"multiselect",name:"moduleScripts",message:"Available module scripts",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:R.highcharts.moduleScripts.value},{type:"multiselect",name:"indicatorScripts",message:"Available indicator scripts",instructions:"Space: Select specific, A: Select all, Enter: Confirm.",choices:R.highcharts.indicatorScripts.value},{type:"list",name:"customScripts",message:"Custom scripts",initial:R.highcharts.customScripts.value.join(","),separator:","},{type:"toggle",name:"forceFetch",message:"Force re-fetch the scripts",initial:R.highcharts.forceFetch.value},{type:"text",name:"cachePath",message:"The path to the cache directory",initial:R.highcharts.cachePath.value}],export:[{type:"select",name:"type",message:"The default export file type",hint:`Default: ${R.export.type.value}`,initial:0,choices:["png","jpeg","pdf","svg"]},{type:"select",name:"constr",message:"The default constructor for Highcharts",hint:`Default: ${R.export.constr.value}`,initial:0,choices:["chart","stockChart","mapChart","ganttChart"]},{type:"number",name:"defaultHeight",message:"The default fallback height of the exported chart",initial:R.export.defaultHeight.value},{type:"number",name:"defaultWidth",message:"The default fallback width of the exported chart",initial:R.export.defaultWidth.value},{type:"number",name:"defaultScale",message:"The default fallback scale of the exported chart",initial:R.export.defaultScale.value,min:.1,max:5},{type:"number",name:"rasterizationTimeout",message:"The rendering webpage timeout in milliseconds",initial:R.export.rasterizationTimeout.value}],customLogic:[{type:"toggle",name:"allowCodeExecution",message:"Enable execution of custom code",initial:R.customLogic.allowCodeExecution.value},{type:"toggle",name:"allowFileResources",message:"Enable file resources",initial:R.customLogic.allowFileResources.value}],server:[{type:"toggle",name:"enable",message:"Starts the server on 0.0.0.0",initial:R.server.enable.value},{type:"text",name:"host",message:"Server hostname",initial:R.server.host.value},{type:"number",name:"port",message:"Server port",initial:R.server.port.value},{type:"toggle",name:"benchmarking",message:"Enable server benchmarking",initial:R.server.benchmarking.value},{type:"text",name:"proxy.host",message:"The host of the proxy server to use",initial:R.server.proxy.host.value},{type:"number",name:"proxy.port",message:"The port of the proxy server to use",initial:R.server.proxy.port.value},{type:"number",name:"proxy.timeout",message:"The timeout for the proxy server to use",initial:R.server.proxy.timeout.value},{type:"toggle",name:"rateLimiting.enable",message:"Enable rate limiting",initial:R.server.rateLimiting.enable.value},{type:"number",name:"rateLimiting.maxRequests",message:"The maximum requests allowed per minute",initial:R.server.rateLimiting.maxRequests.value},{type:"number",name:"rateLimiting.window",message:"The rate-limiting time window in minutes",initial:R.server.rateLimiting.window.value},{type:"number",name:"rateLimiting.delay",message:"The delay for each successive request before reaching the maximum",initial:R.server.rateLimiting.delay.value},{type:"toggle",name:"rateLimiting.trustProxy",message:"Set to true if behind a load balancer",initial:R.server.rateLimiting.trustProxy.value},{type:"text",name:"rateLimiting.skipKey",message:"Allows bypassing the rate limiter when provided with the skipToken argument",initial:R.server.rateLimiting.skipKey.value},{type:"text",name:"rateLimiting.skipToken",message:"Allows bypassing the rate limiter when provided with the skipKey argument",initial:R.server.rateLimiting.skipToken.value},{type:"toggle",name:"ssl.enable",message:"Enable SSL protocol",initial:R.server.ssl.enable.value},{type:"toggle",name:"ssl.force",message:"Force serving only over HTTPS",initial:R.server.ssl.force.value},{type:"number",name:"ssl.port",message:"SSL server port",initial:R.server.ssl.port.value},{type:"text",name:"ssl.certPath",message:"The path to find the SSL certificate/key",initial:R.server.ssl.certPath.value}],pool:[{type:"number",name:"minWorkers",message:"The initial number of workers to spawn",initial:R.pool.minWorkers.value},{type:"number",name:"maxWorkers",message:"The maximum number of workers to spawn",initial:R.pool.maxWorkers.value},{type:"number",name:"workLimit",message:"The pieces of work that can be performed before restarting a Puppeteer process",initial:R.pool.workLimit.value},{type:"number",name:"acquireTimeout",message:"The number of milliseconds to wait for acquiring a resource",initial:R.pool.acquireTimeout.value},{type:"number",name:"createTimeout",message:"The number of milliseconds to wait for creating a resource",initial:R.pool.createTimeout.value},{type:"number",name:"destroyTimeout",message:"The number of milliseconds to wait for destroying a resource",initial:R.pool.destroyTimeout.value},{type:"number",name:"idleTimeout",message:"The number of milliseconds after an idle resource is destroyed",initial:R.pool.idleTimeout.value},{type:"number",name:"createRetryInterval",message:"The retry interval in milliseconds after a create process fails",initial:R.pool.createRetryInterval.value},{type:"number",name:"reaperInterval",message:"The reaper interval in milliseconds after triggering the check for idle resources to destroy",initial:R.pool.reaperInterval.value},{type:"toggle",name:"benchmarking",message:"Enable benchmarking for a resource pool",initial:R.pool.benchmarking.value}],logging:[{type:"number",name:"level",message:"The log level (0: silent, 1: error, 2: warning, 3: notice, 4: verbose, 5: benchmark)",initial:R.logging.level.value,round:0,min:0,max:5},{type:"text",name:"file",message:"A log file name. Set with --toFile and --logDest to enable file logging",initial:R.logging.file.value},{type:"text",name:"dest",message:"The path to a log file when the file logging is enabled",initial:R.logging.dest.value},{type:"toggle",name:"toConsole",message:"Enable logging to the console",initial:R.logging.toConsole.value},{type:"toggle",name:"toFile",message:"Enables logging to a file",initial:R.logging.toFile.value}],ui:[{type:"toggle",name:"enable",message:"Enable UI for the export server",initial:R.ui.enable.value},{type:"text",name:"route",message:"A route to attach the UI",initial:R.ui.route.value}],other:[{type:"text",name:"nodeEnv",message:"The type of Node.js environment",initial:R.other.nodeEnv.value},{type:"toggle",name:"listenToProcessExits",message:"Set to false to skip attaching process.exit handlers",initial:R.other.listenToProcessExits.value},{type:"toggle",name:"noLogo",message:"Skip printing the logo on startup. Replaced by simple text",initial:R.other.noLogo.value},{type:"toggle",name:"hardResetPage",message:"Decides if the page content should be reset entirely",initial:R.other.hardResetPage.value},{type:"toggle",name:"browserShellMode",message:"Decides if the browser runs in the shell mode",initial:R.other.browserShellMode.value}],debug:[{type:"toggle",name:"enable",message:"Enables debug mode for the browser instance",initial:R.debug.enable.value},{type:"toggle",name:"headless",message:"The mode setting for the browser",initial:R.debug.headless.value},{type:"toggle",name:"devtools",message:"The DevTools for the headful browser",initial:R.debug.devtools.value},{type:"toggle",name:"listenToConsole",message:"The event listener for console messages from the browser",initial:R.debug.listenToConsole.value},{type:"toggle",name:"dumpio",message:"Redirects the browser stdout and stderr to NodeJS process",initial:R.debug.dumpio.value},{type:"number",name:"slowMo",message:"Puppeteer operations slow down in milliseconds",initial:R.debug.slowMo.value},{type:"number",name:"debuggingPort",message:"The port number for debugging",initial:R.debug.debuggingPort.value}]},L=["options","globalOptions","themeOptions","resources","payload"],_={},k=(e,t="")=>{Object.keys(e).forEach((o=>{if(!["puppeteer","highcharts"].includes(o)){const r=e[o];void 0===r.value?k(r,`${t}.${o}`):(_[r.cliName||o]=`${t}.${o}`.substring(1),void 0!==r.legacyName&&(_[r.legacyName]=`${t}.${o}`.substring(1)))}}))};k(R),p.config();const I=e=>h.string().transform((t=>t.split(",").map((e=>e.trim())).filter((t=>e.includes(t))))).transform((e=>e.length?e:void 0)),C=()=>h.enum(["true","false",""]).transform((e=>""!==e?"true"===e:void 0)),N=e=>h.enum([...e,""]).transform((e=>""!==e?e:void 0)),A=()=>h.string().trim().refine((e=>!["false","undefined","null","NaN"].includes(e)||""===e),(e=>({message:`The string contains forbidden values, received '${e}'`}))).transform((e=>""!==e?e:void 0)),P=()=>h.string().trim().refine((e=>""===e||!isNaN(parseFloat(e))&&parseFloat(e)>0),(e=>({message:`The value must be numeric and positive, received '${e}'`}))).transform((e=>""!==e?parseFloat(e):void 0)),H=()=>h.string().trim().refine((e=>""===e||!isNaN(parseFloat(e))&&parseFloat(e)>=0),(e=>({message:`The value must be numeric and non-negative, received '${e}'`}))).transform((e=>""!==e?parseFloat(e):void 0)),$=h.object({HIGHCHARTS_VERSION:h.string().trim().refine((e=>/^(latest|\d+(\.\d+){0,2})$/.test(e)||""===e),(e=>({message:`HIGHCHARTS_VERSION must be 'latest', a major version, or in the form XX.YY.ZZ, received '${e}'`}))).transform((e=>""!==e?e:void 0)),HIGHCHARTS_CDN_URL:h.string().trim().refine((e=>e.startsWith("https://")||e.startsWith("http://")||""===e),(e=>({message:`Invalid value for HIGHCHARTS_CDN_URL. It should start with http:// or https://, received '${e}'`}))).transform((e=>""!==e?e:void 0)),HIGHCHARTS_CORE_SCRIPTS:I(x.core),HIGHCHARTS_MODULE_SCRIPTS:I(x.modules),HIGHCHARTS_INDICATOR_SCRIPTS:I(x.indicators),HIGHCHARTS_FORCE_FETCH:C(),HIGHCHARTS_CACHE_PATH:A(),HIGHCHARTS_ADMIN_TOKEN:A(),EXPORT_TYPE:N(["jpeg","png","pdf","svg"]),EXPORT_CONSTR:N(["chart","stockChart","mapChart","ganttChart"]),EXPORT_DEFAULT_HEIGHT:P(),EXPORT_DEFAULT_WIDTH:P(),EXPORT_DEFAULT_SCALE:P(),EXPORT_RASTERIZATION_TIMEOUT:H(),CUSTOM_LOGIC_ALLOW_CODE_EXECUTION:C(),CUSTOM_LOGIC_ALLOW_FILE_RESOURCES:C(),SERVER_ENABLE:C(),SERVER_HOST:A(),SERVER_PORT:P(),SERVER_BENCHMARKING:C(),SERVER_PROXY_HOST:A(),SERVER_PROXY_PORT:P(),SERVER_PROXY_TIMEOUT:H(),SERVER_RATE_LIMITING_ENABLE:C(),SERVER_RATE_LIMITING_MAX_REQUESTS:H(),SERVER_RATE_LIMITING_WINDOW:H(),SERVER_RATE_LIMITING_DELAY:H(),SERVER_RATE_LIMITING_TRUST_PROXY:C(),SERVER_RATE_LIMITING_SKIP_KEY:A(),SERVER_RATE_LIMITING_SKIP_TOKEN:A(),SERVER_SSL_ENABLE:C(),SERVER_SSL_FORCE:C(),SERVER_SSL_PORT:P(),SERVER_SSL_CERT_PATH:A(),POOL_MIN_WORKERS:H(),POOL_MAX_WORKERS:H(),POOL_WORK_LIMIT:P(),POOL_ACQUIRE_TIMEOUT:H(),POOL_CREATE_TIMEOUT:H(),POOL_DESTROY_TIMEOUT:H(),POOL_IDLE_TIMEOUT:H(),POOL_CREATE_RETRY_INTERVAL:H(),POOL_REAPER_INTERVAL:H(),POOL_BENCHMARKING:C(),LOGGING_LEVEL:h.string().trim().refine((e=>""===e||!isNaN(parseFloat(e))&&parseFloat(e)>=0&&parseFloat(e)<=5),(e=>({message:`Invalid value for LOGGING_LEVEL. We only accept values from 0 to 5 as logging levels, received '${e}'`}))).transform((e=>""!==e?parseFloat(e):void 0)),LOGGING_FILE:A(),LOGGING_DEST:A(),LOGGING_TO_CONSOLE:C(),LOGGING_TO_FILE:C(),UI_ENABLE:C(),UI_ROUTE:A(),OTHER_NODE_ENV:N(["development","production","test"]),OTHER_LISTEN_TO_PROCESS_EXITS:C(),OTHER_NO_LOGO:C(),OTHER_HARD_RESET_PAGE:C(),OTHER_BROWSER_SHELL_MODE:C(),DEBUG_ENABLE:C(),DEBUG_HEADLESS:C(),DEBUG_DEVTOOLS:C(),DEBUG_LISTEN_TO_CONSOLE:C(),DEBUG_DUMPIO:C(),DEBUG_SLOW_MO:H(),DEBUG_DEBUGGING_PORT:P()}).partial().parse(process.env),G=["red","yellow","blue","gray","green"];let D={toConsole:!0,toFile:!1,pathCreated:!1,levelsDesc:[{title:"error",color:G[0]},{title:"warning",color:G[1]},{title:"notice",color:G[2]},{title:"verbose",color:G[3]},{title:"benchmark",color:G[4]}],listeners:[]};const U=(...e)=>{const[t,...o]=e,{levelsDesc:r,level:i}=D;if(5!==t&&(0===t||t>i||i>r.length))return;const s=`${(new Date).toString().split("(")[0].trim()} [${r[t-1].title}] -`;D.listeners.forEach((e=>{e(s,o.join(" "))})),console.log.apply(void 0,[s.toString()[D.levelsDesc[t-1].color]].concat(o))},j=(e,t,o)=>{const r=o||t.message,{level:i,levelsDesc:s}=D;if(0===e||e>i||i>s.length)return;const n=`${(new Date).toString().split("(")[0].trim()} [${s[e-1].title}] -`,a=t.message!==t.stackMessage||void 0===t.stackMessage?t.stack:t.stack.split("\n").slice(1).join("\n"),l=[r,"\n",a];console.log.apply(void 0,[n.toString()[D.levelsDesc[e-1].color]].concat([r[G[e-1]],"\n",a])),D.listeners.forEach((e=>{e(n,l.join(" "))}))},M=u(new URL("../.",import.meta.url)),F=(e,t)=>{const o=["png","jpeg","pdf","svg"];if(t){const r=t.split(".").pop();"jpg"===r?e="jpeg":o.includes(r)&&e!==r&&(e=r)}return{"image/png":"png","image/jpeg":"jpeg","application/pdf":"pdf","image/svg+xml":"svg"}[e]||o.find((t=>t===e))||"png"},W=(t=!1,o)=>{const r=["js","css","files"];let i=t,s=!1;if(o&&t.endsWith(".json"))try{i=V(e(t,"utf8"))}catch(e){return j(2,e,"[cli] No resources found.")}else i=V(t),i&&!o&&delete i.files;for(const e in i)r.includes(e)?s||(s=!0):delete i[e];return s?(i.files&&(i.files=i.files.map((e=>e.trim())),(!i.files||i.files.length<=0)&&delete i.files),i):U(3,"[cli] No resources found.")};function V(e,t){try{const o=JSON.parse("string"!=typeof e?JSON.stringify(e):e);return"string"!=typeof o&&t?JSON.stringify(o):o}catch{return!1}}const q=e=>{if(null===e||"object"!=typeof e)return e;const t=Array.isArray(e)?[]:{};for(const o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=q(e[o]));return t},B=(e,t)=>JSON.stringify(e,((e,o)=>("string"==typeof o&&((o=o.trim()).startsWith("function(")||o.startsWith("function ("))&&o.endsWith("}")&&(o=t?`EXP_FUN${(o+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:void 0),"function"==typeof o?`EXP_FUN${(o+"").replaceAll(/\n|\t|\r/g," ")}EXP_FUN`:o))).replaceAll(/"EXP_FUN|EXP_FUN"/g,"");function X(){console.log("\nUsage of CLI arguments:".bold,"\n------",`\nFor more detailed information, visit the readme at: ${"https://github.com/highcharts/node-export-server#readme".bold.yellow}.`);const e=t=>{for(const[o,r]of Object.entries(t))if(Object.prototype.hasOwnProperty.call(r,"value")){let e=`  --${r.cliName||o} ${("<"+r.type+">").green} `;if(e.length<48)for(let t=e.length;t<48;t++)e+=".";console.log(e,r.description,`[Default: ${r.value.toString().bold}]`.blue)}else e(r)};Object.keys(R).forEach((t=>{["puppeteer","highcharts"].includes(t)||(console.log(`\n${t.toUpperCase()}`.red),e(R[t]))})),console.log("\n")}const K=e=>!["false","undefined","null","NaN","0",""].includes(e)&&!!e,J=(t,o)=>{if(t&&"string"==typeof t)return(t=t.trim()).endsWith(".js")?!!o&&J(e(t,"utf8")):t.startsWith("function()")||t.startsWith("function ()")||t.startsWith("()=>")||t.startsWith("() =>")?`(${t})()`:t.replace(/;$/,"")},z=()=>{const e=process.hrtime.bigint();return()=>Number(process.hrtime.bigint()-e)/1e6};let Y={};const Q=()=>Y,Z=(e,t,o=[])=>{const r=q(e);for(const[e,s]of Object.entries(t))r[e]="object"!=typeof(i=s)||Array.isArray(i)||null===i||o.includes(e)||void 0===r[e]?void 0!==s?s:r[e]:Z(r[e],s,o);var i;return r};function ee(e,t={},o=""){Object.keys(e).forEach((r=>{const i=e[r],s=t&&t[r];void 0===i.value?ee(i,s,`${o}.${r}`):(void 0!==s&&(i.value=s),i.envLink in $&&void 0!==$[i.envLink]&&(i.value=$[i.envLink]))}))}function te(e){let t={};for(const[o,r]of Object.entries(e))t[o]=Object.prototype.hasOwnProperty.call(r,"value")?r.value:te(r);return t}function oe(e,t,o){for(;t.length>1;){const r=t.shift();return Object.prototype.hasOwnProperty.call(e,r)||(e[r]={}),e[r]=oe(Object.assign({},e[r]),t,o),e}return e[t[0]]=o,e}async function re(e,t={}){return new Promise(((o,r)=>{const i=(e=>e.startsWith("https")?g:d)(e);i.get(e,t,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{t||r("Nothing was fetched from the URL."),e.text=t,o(e)}))})).on("error",(e=>{r(e)}))}))}class ie extends Error{constructor(e,t){super(),this.message=e,this.stackMessage=e,t&&(this.status=t)}setError(e){return this.error=e,e.name&&(this.name=e.name),!this.status&&e.statusCode&&(this.status=e.statusCode),e.stack&&(this.stackMessage=e.message,this.stack=e.stack),this}}const se={cdnURL:"https://code.highcharts.com/",activeManifest:{},sources:"",hcVersion:""},ne=e=>e.sources.substring(0,e.sources.indexOf("*/")).replace("/*","").replace("*/","").replace(/\n/g,"").trim(),ae=async(e,t,o,r=!1)=>{e.endsWith(".js")&&(e=e.substring(0,e.length-3)),U(4,`[cache] Fetching script - ${e}.js`);const i=await re(`${e}.js`,t);if(200===i.statusCode&&"string"==typeof i.text){if(o){o[e.replace(/(.*)\/|(.*)modules\/|stock\/(.*)indicators\/|maps\/(.*)modules\//gi,"")]=1}return i.text}if(r)throw new ie(`Could not fetch the ${e}.js. The script might not exist in the requested version (status code: ${i.statusCode}).`).setError(i);return U(2,`[cache] Could not fetch the ${e}.js. The script might not exist in the requested version.`),""},le=async(e,t,o)=>{const r=e.version,s="latest"!==r&&r?`${r}/`:"",n=e.cdnURL||se.cdnURL;U(3,`[cache] Updating cache version to Highcharts: ${s||"latest"}.`);const a={};try{return se.sources=await(async(e,t,o,r,i)=>{let s;const n=r.host,a=r.port;if(n&&a)try{s=new l({host:n,port:a})}catch(e){throw new ie("[cache] Could not create a Proxy Agent.").setError(e)}const c=s?{agent:s,timeout:$.SERVER_PROXY_TIMEOUT}:{},p=[...e.map((e=>ae(`${e}`,c,i,!0))),...t.map((e=>ae(`${e}`,c,i))),...o.map((e=>ae(`${e}`,c)))];return(await Promise.all(p)).join(";\n")})([...e.coreScripts.map((e=>`${n}${s}${e}`))],[...e.moduleScripts.map((e=>"map"===e?`${n}maps/${s}modules/${e}`:`${n}${s}modules/${e}`)),...e.indicatorScripts.map((e=>`${n}stock/${s}indicators/${e}`))],e.customScripts,t,a),se.hcVersion=ne(se),i(o,se.sources),a}catch(e){throw new ie("[cache] Unable to update the local Highcharts cache.").setError(e)}},ce=async o=>{const{highcharts:s,server:a}=o,l="/tmp/.cache";let c;const p=n(l,"manifest.json"),h=n(l,"sources.js");if(!t(l)&&r(l),!t(p)||s.forceFetch)U(3,"[cache] Fetching and caching Highcharts dependencies."),c=await le(s,a.proxy,h);else{let t=!1;const o=JSON.parse(e(p));if(o.modules&&Array.isArray(o.modules)){const e={};o.modules.forEach((t=>e[t]=1)),o.modules=e}const{coreScripts:r,moduleScripts:i,indicatorScripts:n}=s,l=r.length+i.length+n.length;o.version!==s.version?(U(2,"[cache] A Highcharts version mismatch in the cache, need to re-fetch."),t=!0):Object.keys(o.modules||{}).length!==l?(U(2,"[cache] The cache and the requested modules do not match, need to re-fetch."),t=!0):t=(i||[]).some((e=>{if(!o.modules[e])return U(2,`[cache] The ${e} is missing in the cache, need to re-fetch.`),!0})),t?c=await le(s,a.proxy,h):(U(3,"[cache] Dependency cache is up to date, proceeding."),se.sources=e(h,"utf8"),c=o.modules,se.hcVersion=ne(se))}await(async(e,t)=>{const o={version:e.version,modules:t||{}};se.activeManifest=o,U(3,"[cache] Writing a new manifest.");try{i("/tmp/.cache/manifest.json",JSON.stringify(o),"utf8")}catch(e){throw new ie("[cache] Error writing the cache manifest.",400).setError(e)}})(s,c)},pe=()=>"/tmp/.cache",he=()=>se.hcVersion;function ue(){Highcharts.animObject=function(){return{duration:0}}}async function de(e,t,o){window._displayErrors=o;const{getOptions:r,merge:i,setOptions:s,wrap:n}=Highcharts;Highcharts.setOptionsObj=i(!1,{},r());const a={animation:!1};t.export.strInj&&(a.height=e.chart.height,a.width=e.chart.width),window.isRenderComplete=!1,n(Highcharts.Chart.prototype,"init",(function(e,t,o){((t=i(t,{exporting:{enabled:!1},plotOptions:{series:{label:{enabled:!1}}},tooltip:{}})).series||[]).forEach((function(e){e.animation=!1})),window.onHighchartsRender||(window.onHighchartsRender=Highcharts.addEvent(this,"render",(()=>{window.isRenderComplete=!0}))),e.apply(this,[t,o])})),n(Highcharts.Series.prototype,"init",(function(e,t,o){e.apply(this,[t,o])}));const l=t.export.strInj?new Function(`return ${t.export.strInj}`)():e;t.customLogic.customCode&&new Function("options",t.customLogic.customCode)(l);const c=i(!1,JSON.parse(t.export.themeOptions),l,{chart:a}),p=t.customLogic.callback?new Function(`return ${t.customLogic.callback}`)():void 0,h=JSON.parse(t.export.globalOptions);h&&s(h),Highcharts[t.export.constr||"chart"]("container",c,p);const u=r();for(const e in u)"function"!=typeof u[e]&&delete u[e];s(Highcharts.setOptionsObj),Highcharts.setOptionsObj={}}const ge=e(M+"/templates/template.html","utf8");let me;async function fe(){if(!me)return!1;const e=await me.newPage();return await e.setCacheEnabled(!1),await ye(e),function(e){const{debug:t}=Q();t.enable&&t.listenToConsole&&e.on("console",(e=>{console.log(`[debug] ${e.text()}`)}));e.on("pageerror",(async t=>{await e.$eval("#container",((e,t)=>{window._displayErrors&&(e.innerHTML=t)}),`<h1>Chart input data error: </h1>${t.toString()}`)}))}(e),e}async function ve(e,t){for(const e of t)await e.dispose();await e.evaluate((()=>{if("undefined"!=typeof Highcharts){const e=Highcharts.charts;if(Array.isArray(e)&&e.length)for(const t of e)t&&t.destroy(),Highcharts.charts.shift()}const[...e]=document.getElementsByTagName("script"),[,...t]=document.getElementsByTagName("style"),[...o]=document.getElementsByTagName("link");for(const r of[...e,...t,...o])r.remove()}))}async function ye(e){await e.setContent(ge,{waitUntil:"domcontentloaded"}),await e.addScriptTag({path:`${pe()}/sources.js`}),await e.evaluate(ue)}const be=async(e,t,o,r)=>e.evaluate(de,t,o,r);var we=async(t,o,r)=>{let i=[];try{U(4,"[export] Determining export path.");const n=r.export,a=n?.options?.chart?.displayErrors&&se.activeManifest.modules.debugger;let l;if(o.indexOf&&(o.indexOf("<svg")>=0||o.indexOf("<?xml")>=0)){if(U(4,"[export] Treating as SVG."),"svg"===n.type)return o;l=!0,await t.setContent((e=>`\n<!DOCTYPE html>\n<html lang='en-US'>\n  <head>\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\n    <title>Highcharts Export</title>\n  </head>\n  <style>\n    \n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#table-div, #sliders, #datatable, #controls, .ld-row {\n  display: none;\n  height: 0;\n}\n\n#chart-container {\n  box-sizing: border-box;\n  margin: 0;\n  overflow: auto;\n  font-size: 0;\n}\n\n#chart-container > figure, div {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n\n  </style>\n  <body>\n    <div id="chart-container">\n      ${e}\n    </div>\n  </body>\n</html>\n\n`)(o),{waitUntil:"domcontentloaded"})}else U(4,"[export] Treating as config."),n.strInj?await be(t,{chart:{height:n.height,width:n.width}},r,a):(o.chart.height=n.height,o.chart.width=n.width,await be(t,o,r,a));i=await async function(t,o){const r=[],i=o.customLogic.resources;if(i){const n=[];if(i.js&&n.push({content:i.js}),i.files)for(const t of i.files){const o=!t.startsWith("http");n.push(o?{content:e(t,"utf8")}:{url:t})}for(const e of n)try{r.push(await t.addScriptTag(e))}catch(e){j(2,e,"[export] The JS resource cannot be loaded.")}n.length=0;const a=[];if(i.css){let e=i.css.match(/@import\s*([^;]*);/g);if(e)for(let t of e)t&&(t=t.replace("url(","").replace("@import","").replace(/"/g,"").replace(/'/g,"").replace(/;/,"").replace(/\)/g,"").trim(),t.startsWith("http")?a.push({url:t}):o.customLogic.allowFileResources&&a.push({path:s.join(M,t)}));a.push({content:i.css.replace(/@import\s*([^;]*);/g,"")||" "});for(const e of a)try{r.push(await t.addStyleTag(e))}catch(e){j(2,e,"[export] The CSS resource cannot be loaded.")}a.length=0}}return r}(t,r);const c=l?await t.evaluate((e=>{const t=document.querySelector("#chart-container svg:first-of-type"),o=t.height.baseVal.value*e,r=t.width.baseVal.value*e;return document.body.style.zoom=e,document.body.style.margin="0px",{chartHeight:o,chartWidth:r}}),parseFloat(n.scale)):await t.evaluate((()=>{const{chartHeight:e,chartWidth:t}=window.Highcharts.charts[0];return document.body.style.zoom=1,{chartHeight:e,chartWidth:t}})),p=Math.ceil(c.chartHeight||n.height),h=Math.ceil(c.chartWidth||n.width),{x:u,y:d}=await(e=>e.$eval("#chart-container",(e=>{const{x:t,y:o,width:r,height:i}=e.getBoundingClientRect();return{x:t,y:o,width:r,height:Math.trunc(i>1?i:500)}})))(t);let g;if(await t.setViewport({height:p,width:h,deviceScaleFactor:l?1:parseFloat(n.scale)}),"svg"===n.type)g=await(e=>e.$eval("#container svg:first-of-type",(e=>e.outerHTML)))(t);else if(["png","jpeg"].includes(n.type))g=await((e,t,o,r,i)=>Promise.race([e.screenshot({type:t,encoding:o,clip:r,captureBeyondViewport:!0,fullPage:!1,optimizeForSpeed:!0,..."png"!==t?{quality:80}:{},omitBackground:"png"==t}),new Promise(((e,t)=>setTimeout((()=>t(new ie("Rasterization timeout",408))),i||1500)))]))(t,n.type,"base64",{width:h,height:p,x:u,y:d},n.rasterizationTimeout);else{if("pdf"!==n.type)throw new ie(`[export] Unsupported output format ${n.type}.`,400);g=await(async(e,t,o,r,i)=>(await e.emulateMediaType("screen"),Promise.race([e.pdf({height:t+1,width:o,encoding:r}),new Promise(((e,t)=>setTimeout((()=>t(new ie("Rasterization timeout",408))),i||1500)))])))(t,p,h,"base64",n.rasterizationTimeout)}return await ve(t,i),g}catch(e){return await ve(t,i),e}};let Ee=!1;const Te={performedExports:0,exportAttempts:0,exportFromSvgAttempts:0,timeSpent:0,droppedExports:0,spentAverage:0};let Se={};const xe={create:async()=>{let e=!1;const t=f(),o=(new Date).getTime();try{if(e=await fe(),!e||e.isClosed())throw new ie("The page is invalid or closed.",500);U(3,`[pool] Successfully created a worker ${t} - took ${(new Date).getTime()-o} ms.`)}catch(e){throw new ie("Error encountered when creating a new page.",500).setError(e)}return{id:t,page:e,workCount:Math.round(Math.random()*(Se.workLimit/2))}},validate:async e=>!(Se.workLimit&&++e.workCount>Se.workLimit)||(U(3,`[pool] Worker failed validation: exceeded work limit (limit is ${Se.workLimit}).`),!1),destroy:async e=>{U(3,`[pool] Destroying pool entry ${e.id}.`),e.page&&await e.page.close()}},Re=async(e,t)=>{if(Se=e&&e.pool?{...e.pool}:{},await async function(e,t){const{debug:o,other:r}=Q(),{enable:i,...s}=o,n={args:[...t.args,...e],handleSIGINT:!1,handleSIGTERM:!1,handleSIGHUP:!1,waitForInitialPage:!1,defaultViewport:t.defaultViewport,executablePath:await t.executablePath(),headless:t.headless,...i&&s};if(!me){let e=0;const t=async()=>{try{U(3,`[browser] Attempting to get a browser instance (try ${++e}).`),me=await v.launch(n)}catch(o){if(j(1,o,"[browser] Failed to launch a browser instance."),!(e<25))throw o;U(3,`[browser] Retry to open a browser (${e} out of 25).`),await new Promise((e=>setTimeout(e,4e3))),await t()}};try{await t(),"shell"===n.headless&&U(3,"[browser] Launched browser in shell mode."),i&&U(3,"[browser] Launched browser in debug mode.")}catch(e){throw new ie("[browser] Maximum retries to open a browser instance reached.",500).setError(e)}if(!me)throw new ie("[browser] Cannot find a browser to open.",500)}return me}(e.puppeteerArgs,t),U(3,`[pool] Initializing pool with workers: min ${Se.minWorkers}, max ${Se.maxWorkers}.`),Ee)return U(4,"[pool] Already initialized, please kill it before creating a new one.");parseInt(Se.minWorkers)>parseInt(Se.maxWorkers)&&(Se.minWorkers=Se.maxWorkers);try{Ee=new m({...xe,min:parseInt(Se.minWorkers),max:parseInt(Se.maxWorkers),acquireTimeoutMillis:Se.acquireTimeout,createTimeoutMillis:Se.createTimeout,destroyTimeoutMillis:Se.destroyTimeout,idleTimeoutMillis:Se.idleTimeout,createRetryIntervalMillis:Se.createRetryInterval,reapIntervalMillis:Se.reaperInterval,propagateCreateError:!1}),Ee.on("release",(async e=>{await async function(e,t=!1){try{e.isClosed()||(t?(await e.goto("about:blank",{waitUntil:"domcontentloaded"}),await ye(e)):await e.evaluate((()=>{document.body.innerHTML='<div id="chart-container"><div id="container"></div></div>'})))}catch(e){j(2,e,"[browser] Could not clear the content of the page.")}}(e.page,!1),U(4,`[pool] Releasing a worker with ID ${e.id}.`)})),Ee.on("destroySuccess",((e,t)=>{U(4,`[pool] Destroyed a worker with ID ${t.id}.`)}));const e=[];for(let t=0;t<Se.minWorkers;t++)try{const t=await Ee.acquire().promise;e.push(t)}catch(e){j(2,e,"[pool] Could not create an initial resource.")}e.forEach((e=>{Ee.release(e)})),U(3,"[pool] The pool is ready"+(e.length?` with ${e.length} initial resources waiting.`:"."))}catch(e){throw new ie("[pool] Could not create the pool of workers.",500).setError(e)}};async function Oe(){if(U(3,"[pool] Killing pool with all workers and closing browser."),Ee){for(const e of Ee.used)Ee.release(e.resource);Ee.destroyed||(await Ee.destroy(),U(4,"[browser] Destroyed the pool of resources."))}await async function(){me?.connected&&await me.close(),U(4,"[browser] Closed the browser.")}()}const Le=async(e,t)=>{let o;try{if(U(4,"[pool] Work received, starting to process."),++Te.exportAttempts,Se.benchmarking&&ke(),!Ee)throw new ie("Work received, but pool has not been started.",500);const r=z();try{U(4,"[pool] Acquiring a worker handle."),o=await Ee.acquire().promise,t.server.benchmarking&&U(5,t.payload?.requestId?`[benchmark] Request with ID ${t.payload?.requestId} -`:"[benchmark]",`Acquired a worker handle: ${r()}ms.`)}catch(e){throw new ie((t.payload?.requestId?`For request with ID ${t.payload?.requestId} - `:"")+`Error encountered when acquiring an available entry: ${r()}ms.`).setError(e)}if(U(4,"[pool] Acquired a worker handle."),!o.page)throw new ie("Resolved worker page is invalid: the pool setup is wonky.",500);let i=(new Date).getTime();U(4,`[pool] Starting work on pool entry with ID ${o.id}.`);const s=z(),n=await we(o.page,e,t);if(n instanceof Error)throw"Rasterization timeout"===n.message&&(o.page.close(),o.page=await fe()),new ie((t.payload?.requestId?`For request with ID ${t.payload?.requestId} - `:"")+`Error encountered during export: ${s()}ms.`).setError(n);t.server.benchmarking&&U(5,t.payload?.requestId?`[benchmark] Request with ID ${t.payload?.requestId} -`:"[benchmark]",`Exported a chart sucessfully: ${s()}ms.`),Ee.release(o);const a=(new Date).getTime()-i;return Te.timeSpent+=a,Te.spentAverage=Te.timeSpent/++Te.performedExports,U(4,`[pool] Work completed in ${a} ms.`),{result:n,options:t}}catch(e){throw++Te.droppedExports,o&&Ee.release(o),new ie(`[pool] In pool.postWork: ${e.message}`).setError(e)}},_e=()=>({min:Ee.min,max:Ee.max,all:Ee.numFree()+Ee.numUsed(),available:Ee.numFree(),used:Ee.numUsed(),pending:Ee.numPendingAcquires()});function ke(){const{min:e,max:t,all:o,available:r,used:i,pending:s}=_e();U(5,`[pool] The minimum number of resources allowed by pool: ${e}.`),U(5,`[pool] The maximum number of resources allowed by pool: ${t}.`),U(5,`[pool] The number of all created resources: ${o}.`),U(5,`[pool] The number of available resources: ${r}.`),U(5,`[pool] The number of acquired resources: ${i}.`),U(5,`[pool] The number of resources waiting to be acquired: ${s}.`)}var Ie=_e,Ce=()=>Te;let Ne=!1;const Ae=async(t,o)=>{U(4,"[chart] Starting the exporting process.");const r=((e,t={})=>{let o={};return e.svg?(o=q(t),o.export.type=e.type||e.export.type,o.export.scale=e.scale||e.export.scale,o.export.outfile=e.outfile||e.export.outfile,o.payload={svg:e.svg}):o=Z(t,e,L),o.export.outfile=o.export?.outfile||`chart.${o.export?.type||"png"}`,o})(t,Q()),i=r.export;if(r.payload?.svg&&""!==r.payload.svg)try{U(4,"[chart] Attempting to export from a SVG input.");const e=Ge(function(e){const t=new y("").window;return b(t).sanitize(e,{ADD_TAGS:["foreignObject"]})}(r.payload.svg),r,o);return++Te.exportFromSvgAttempts,e}catch(e){return o(new ie("[chart] Error loading SVG input.",400).setError(e))}if(i.infile&&i.infile.length)try{return U(4,"[chart] Attempting to export from an input file."),r.export.instr=e(i.infile,"utf8"),Ge(r.export.instr.trim(),r,o)}catch(e){return o(new ie("[chart] Error loading input file.",400).setError(e))}if(i.instr&&""!==i.instr||i.options&&""!==i.options)try{return U(4,"[chart] Attempting to export from a raw input."),K(r.customLogic?.allowCodeExecution)?$e(r,o):"string"==typeof i.instr?Ge(i.instr.trim(),r,o):He(r,i.instr||i.options,o)}catch(e){return o(new ie("[chart] Error loading raw input.").setError(e))}return o(new ie("[chart] No valid input specified. Check if at least one of the following parameters is correctly set: 'infile', 'instr', 'options', or 'svg'.",400))},Pe=e=>{const{chart:t,exporting:o}=e.export?.options||V(e.export?.instr),r=V(e.export?.globalOptions);let i=e.export?.scale||o?.scale||r?.exporting?.scale||e.export?.defaultScale||1;i=Math.max(.1,Math.min(i,5)),i=((e,t=1)=>{const o=Math.pow(10,t||0);return Math.round(+e*o)/o})(i,2);const s={height:e.export?.height||o?.sourceHeight||t?.height||r?.exporting?.sourceHeight||r?.chart?.height||e.export?.defaultHeight||400,width:e.export?.width||o?.sourceWidth||t?.width||r?.exporting?.sourceWidth||r?.chart?.width||e.export?.defaultWidth||600,scale:i};for(let[e,t]of Object.entries(s))s[e]="string"==typeof t?+t.replace(/px|%/gi,""):t;return s},He=async(t,o,r,i)=>{let{export:s,customLogic:n}=t;const a="boolean"==typeof n.allowCodeExecution?n.allowCodeExecution:Ne;if(n){if(a)if("string"==typeof t.customLogic.resources)t.customLogic.resources=W(t.customLogic.resources,K(t.customLogic.allowFileResources));else if(!t.customLogic.resources)try{const o=e("resources.json","utf8");t.customLogic.resources=W(o,K(t.customLogic.allowFileResources))}catch(e){j(2,e,"[chart] Unable to load the default resources.json file.")}}else n=t.customLogic={};if(!a&&n){if(n.callback||n.resources||n.customCode)return r(new ie("[chart] The 'callback', 'resources' and 'customCode' options have been disabled for this server.",400));n.callback=!1,n.resources=!1,n.customCode=!1}if(o&&(o.chart=o.chart||{},o.exporting=o.exporting||{},o.exporting.enabled=!1),s.constr=s.constr||"chart",s.type=F(s.type,s.outfile),"svg"===s.type&&(s.width=!1),["globalOptions","themeOptions"].forEach((t=>{try{s&&s[t]&&("string"==typeof s[t]&&s[t].endsWith(".json")?s[t]=V(e(s[t],"utf8"),!0):s[t]=V(s[t],!0))}catch(e){s[t]={},j(2,e,`[chart] The '${t}' cannot be loaded.`)}})),n.allowCodeExecution)try{n.customCode=J(n.customCode,n.allowFileResources)}catch(e){j(2,e,"[chart] The 'customCode' cannot be loaded.")}if(n&&n.callback&&n.callback?.indexOf("{")<0)if(n.allowFileResources)try{n.callback=e(n.callback,"utf8")}catch(e){n.callback=!1,j(2,e,"[chart] The 'callback' cannot be loaded.")}else n.callback=!1;t.export={...t.export,...Pe(t)};try{return r(!1,await Le(s.strInj||o||i,t))}catch(e){return r(e)}},$e=(e,t)=>{try{let o,r=e.export.instr||e.export.options;return"string"!=typeof r&&(o=r=B(r,e.customLogic?.allowCodeExecution)),o=r.replaceAll(/\t|\n|\r/g,"").trim(),";"===o[o.length-1]&&(o=o.substring(0,o.length-1)),e.export.strInj=o,He(e,!1,t)}catch(o){return t(new ie(`[chart] Malformed input detected for ${e.export?.requestId||"?"}. Please make sure that your JSON/JavaScript options are sent using the "options" attribute, and that if you're using SVG, it is unescaped.`,400).setError(o))}},Ge=(e,t,o)=>{const{allowCodeExecution:r}=t.customLogic;if(e.indexOf("<svg")>=0||e.indexOf("<?xml")>=0)return U(4,"[chart] Parsing input as SVG."),He(t,!1,o,e);try{const r=JSON.parse(e.replaceAll(/\t|\n|\r/g," "));return He(t,r,o)}catch(e){return K(r)?$e(t,o):o(new ie("[chart] Only JSON configurations and SVG are allowed for this server. If this is your server, JavaScript custom code can be enabled by starting the server with the --allowCodeExecution flag.",400).setError(e))}},De=[],Ue=()=>{U(4,"[server] Clearing all registered intervals.");for(const e of De)clearInterval(e)},je=(e,t,o,r)=>{j(1,e),"development"!==$.OTHER_NODE_ENV&&delete e.stack,r(e)},Me=(e,t,o,r)=>{const{statusCode:i,status:s,message:n,stack:a}=e,l=i||s||500;o.status(l).json({statusCode:l,message:n,stack:a})};var Fe=(e,t)=>{const o="Too many requests, you have been rate limited. Please try again later.",r={max:t.maxRequests||30,window:t.window||1,delay:t.delay||0,trustProxy:t.trustProxy||!1,skipKey:t.skipKey||!1,skipToken:t.skipToken||!1};r.trustProxy&&e.enable("trust proxy");const i=S({windowMs:60*r.window*1e3,max:r.max,delayMs:r.delay,handler:(e,t)=>{t.format({json:()=>{t.status(429).send({message:o})},default:()=>{t.status(429).send(o)}})},skip:e=>!1!==r.skipKey&&!1!==r.skipToken&&e.query.key===r.skipKey&&e.query.access_token===r.skipToken&&(U(4,"[rate limiting] Skipping rate limiter."),!0)});e.use(i),U(3,`[rate limiting] Enabled rate limiting with ${r.max} requests per ${r.window} minute for each IP, trusting proxy: ${r.trustProxy}.`)};class We extends ie{constructor(e,t){super(e),this.status=this.statusCode=t}setStatus(e){return this.status=e,this}}var Ve=e=>!!e&&e.post("/version/change/:newVersion",(async(e,t,o)=>{try{const o=$.HIGHCHARTS_ADMIN_TOKEN;if(!o||!o.length)throw new We("The server is not configured to perform run-time version changes: HIGHCHARTS_ADMIN_TOKEN is not set.",401);const r=e.get("hc-auth");if(!r||r!==o)throw new We("Invalid or missing token: Set the token in the hc-auth header.",401);const i=e.params.newVersion;if(!i)throw new We("No new version supplied.",400);try{await(async e=>{const t=Q();t?.highcharts&&(t.highcharts.version=e),await ce(t)})(i)}catch(e){throw new We(`Version change: ${e.message}`,e.statusCode).setError(e)}t.status(200).send({statusCode:200,version:he(),message:`Successfully updated Highcharts to version: ${i}.`})}catch(e){o(e)}}));const qe={png:"image/png",jpeg:"image/jpeg",gif:"image/gif",pdf:"application/pdf",svg:"image/svg+xml"};let Be=0;const Xe=[],Ke=[],Je=(e,t,o,r)=>{let i=!0;const{id:s,uniqueId:n,type:a,body:l}=r;return e.some((e=>{if(e){let r=e(t,o,s,n,a,l);return void 0!==r&&!0!==r&&(i=r),!0}})),i},ze=async(e,t,o)=>{try{const o=z(),i=f().replace(/-/g,""),s=Q(),n=e.body,a=++Be;let l=F(n.type);if(!n||"object"==typeof(r=n)&&!Array.isArray(r)&&null!==r&&0===Object.keys(r).length)throw new We("The request body is required. Please ensure that your Content-Type header is correct (accepted types are application/json and multipart/form-data).",400);let c=V(n.infile||n.options||n.data);if(!c&&!n.svg)throw U(2,`The request with ID ${i} from ${e.headers["x-forwarded-for"]||e.connection.remoteAddress} was incorrect. Payload received: ${JSON.stringify(n)}.`),new We("No correct chart data found. Ensure that you are using either application/json or multipart/form-data headers. If sending JSON, make sure the chart data is in the 'infile', 'options', or 'data' attribute. If sending SVG, ensure it is in the 'svg' attribute.",400);let p=!1;if(p=Je(Xe,e,t,{id:a,uniqueId:i,type:l,body:n}),!0!==p)return t.send(p);let h=!1;e.socket.on("close",(()=>{h=!0})),U(4,`[export] Got an incoming HTTP request with ID ${i}.`),n.constr="string"==typeof n.constr&&n.constr||"chart";const u={export:{instr:c,type:l,constr:n.constr[0].toLowerCase()+n.constr.substr(1),height:n.height,width:n.width,scale:n.scale||s.export.scale,globalOptions:V(n.globalOptions,!0),themeOptions:V(n.themeOptions,!0)},customLogic:{allowCodeExecution:Ne,allowFileResources:!1,resources:V(n.resources,!0),callback:n.callback,customCode:n.customCode}};c&&(u.export.instr=B(c,u.customLogic.allowCodeExecution));const d=Z(s,u);if(d.export.options=c,d.payload={svg:n.svg||!1,b64:n.b64||!1,noDownload:n.noDownload||!1,requestId:i},n.svg&&(e=>[/xlink:href="(?:http:\/\/|https:\/\/)?localhost\b/,/xlink:href="(?:http:\/\/|https:\/\/)?10\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?127\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?172\.(1[6-9]|2[0-9]|3[0-1])\.\d{1,3}\.\d{1,3}\b/,/xlink:href="(?:http:\/\/|https:\/\/)?192\.168\.\d{1,3}\.\d{1,3}\b/].some((t=>t.test(e))))(d.payload.svg))throw new We("SVG potentially contain at least one forbidden URL in xlink:href element. Please review the SVG content and ensure that all referenced URLs comply with security policies.",400);await Ae(d,((r,c)=>{if(e.socket.removeAllListeners("close"),s.server.benchmarking&&U(5,`[benchmark] Request with ID ${i} - After the whole exporting process: ${o()}ms.`),h)return U(3,"[export] The client closed the connection before the chart finished processing.");if(r)throw r;if(!c||!c.result)throw new We(`Unexpected return from chart generation. Please check your request data. For the request with ID ${i}, the result is ${c.result}.`,400);return l=c.options.export.type,Je(Ke,e,t,{id:a,body:c.result}),c.result?n.b64?"pdf"===l||"svg"==l?t.send(Buffer.from(c.result,"utf8").toString("base64")):t.send(c.result):(t.header("Content-Type",qe[l]||"image/png"),n.noDownload||t.attachment(`${e.params.filename||e.body.filename||"chart"}.${l||"png"}`),"svg"===l?t.send(c.result):t.send(Buffer.from(c.result,"base64"))):void 0}))}catch(e){o(e)}var r};const Ye=JSON.parse(e(n(M,"package.json"))),Qe=new Date,Ze=[];function et(e){if(!e)return!1;var t;t=setInterval((()=>{const e=Ce(),t=0===e.exportAttempts?1:e.performedExports/e.exportAttempts*100;Ze.push(t),Ze.length>30&&Ze.shift()}),6e4),De.push(t),e.get("/health",((e,t)=>{const o=Ce(),r=Ze.length,i=Ze.reduce(((e,t)=>e+t),0)/Ze.length;U(4,"[health.js] GET /health [200] - returning server health."),t.send({status:"OK",bootTime:Qe,uptime:Math.floor(((new Date).getTime()-Qe.getTime())/1e3/60)+" minutes",version:Ye.version,highchartsVersion:he(),averageProcessingTime:o.spentAverage,performedExports:o.performedExports,failedExports:o.droppedExports,exportAttempts:o.exportAttempts,sucessRatio:o.performedExports/o.exportAttempts*100,pool:Ie(),period:r,movingAverage:i,message:isNaN(i)||!Ze.length?"Too early to report. No exports made yet. Please check back soon.":`Last ${r} minutes had a success rate of ${i.toFixed(2)}%.`,svgExportAttempts:o.exportFromSvgAttempts,jsonExportAttempts:o.performedExports-o.exportFromSvgAttempts})}))}const tt=new Map,ot=E();ot.disable("x-powered-by"),ot.use(w());const rt=T.memoryStorage(),it=T({storage:rt,limits:{fieldSize:52428800}});ot.use(E.json({limit:52428800})),ot.use(E.urlencoded({extended:!0,limit:52428800})),ot.use(it.none());const st=e=>{e.on("clientError",(e=>{j(1,e,`[server] Client error: ${e.message}`)})),e.on("error",(e=>{j(1,e,`[server] Server error: ${e.message}`)})),e.on("connection",(e=>{e.on("error",(e=>{j(1,e,`[server] Socket error: ${e.message}`)}))}))},nt=async e=>{try{if(!e.enable)return!1;if(!e.ssl.force){const t=d.createServer(ot);st(t),t.listen(e.port,e.host),tt.set(e.port,t),U(3,`[server] Started HTTP server on ${e.host}:${e.port}.`)}if(e.ssl.enable){let t,r;try{t=await o.readFile(a.join(e.ssl.certPath,"server.key"),"utf8"),r=await o.readFile(a.join(e.ssl.certPath,"server.crt"),"utf8")}catch(t){U(2,`[server] Unable to load key/certificate from the '${e.ssl.certPath}' path. Could not run secured layer server.`)}if(t&&r){const o=g.createServer({key:t,cert:r},ot);st(o),o.listen(e.ssl.port,e.host),tt.set(e.ssl.port,o),U(3,`[server] Started HTTPS server on ${e.host}:${e.ssl.port}.`)}}e.rateLimiting&&e.rateLimiting.enable&&![0,NaN].includes(e.rateLimiting.maxRequests)&&Fe(ot,e.rateLimiting),ot.use(E.static(a.join(M,"public"))),et(ot),(e=>{e.post("/",ze),e.post("/:filename",ze)})(ot),(e=>{!!e&&e.get("/",((e,t)=>{t.sendFile(n(M,"public","index.html"))}))})(ot),Ve(ot),(e=>{e.use(je),e.use(Me)})(ot)}catch(e){throw new ie("[server] Could not configure and start the server.",500).setError(e)}},at=()=>{U(4,"[server] Closing all servers.");for(const[e,t]of tt)t.close((()=>{tt.delete(e),U(4,`[server] Closed server on port: ${e}.`)}))};var lt={startServer:nt,closeServers:at,getServers:()=>tt,enableRateLimiting:e=>Fe(ot,e),getExpress:()=>E,getApp:()=>ot,use:(e,...t)=>{ot.use(e,...t)},get:(e,...t)=>{ot.get(e,...t)},post:(e,...t)=>{ot.post(e,...t)}};const ct=async e=>{await Promise.allSettled([Ue(),at(),Oe()]),process.exit(e)};var pt={server:lt,startServer:nt,initExport:async(e,t)=>{var o;return o=e.customLogic&&e.customLogic.allowCodeExecution,Ne=K(o),e.other.listenToProcessExits&&(U(3,"[process] Attaching exit listeners to the process."),process.on("exit",(e=>{U(4,`Process exited with code ${e}.`)})),process.on("SIGINT",(async(e,t)=>{U(4,`The ${e} event with code: ${t}.`),await ct(0)})),process.on("SIGTERM",(async(e,t)=>{U(4,`The ${e} event with code: ${t}.`),await ct(0)})),process.on("SIGHUP",(async(e,t)=>{U(4,`The ${e} event with code: ${t}.`),await ct(0)})),process.on("uncaughtException",(async(e,t)=>{j(1,e,`The ${t} error.`),await ct(1)}))),await ce(e),await Re({pool:e.pool||{minWorkers:1,maxWorkers:1},puppeteerArgs:e.puppeteer.args||[]},t),e},singleExport:async e=>{e.export.instr=e.export.instr||e.export.options,await Ae(e,(async(e,t)=>{if(e)throw e;const{outfile:o,type:r}=t.options.export;i(o||`chart.${r}`,"svg"!==r?Buffer.from(t.result,"base64"):t.result),await Oe()}))},batchExport:async e=>{const t=[];for(let o of e.export.batch.split(";"))o=o.split("="),2===o.length&&t.push(Ae({...e,export:{...e.export,infile:o[0],outfile:o[1]}},((e,t)=>{if(e)throw e;i(t.options.export.outfile,"svg"!==t.options.export.type?Buffer.from(t.result,"base64"):t.result)})));try{await Promise.all(t),await Oe()}catch(e){throw new ie("[chart] Error encountered during batch export.").setError(e)}},startExport:Ae,initPool:Re,killPool:Oe,setOptions:(t,o)=>(o?.length&&(Y=function(t){const o=t.findIndex((e=>"loadConfig"===e.replace(/-/g,"")));if(o>-1&&t[o+1]){const r=t[o+1];try{if(r&&r.endsWith(".json"))return JSON.parse(e(r))}catch(e){j(2,e,`[config] Unable to load the configuration from the ${r} file.`)}}return{}}(o)),ee(R,Y),Y=te(R),t&&(Y=Z(Y,t,L)),o?.length&&(Y=function(e,t,o){let r=!1;for(let i=0;i<t.length;i++){const s=t[i].replace(/-/g,""),n=_[s]?_[s].split("."):[];let a;n.reduce(((e,t,o)=>(n.length-1===o&&(a=e[t].type),e[t])),o),n.reduce(((e,o,l)=>(n.length-1===l&&void 0!==e[o]&&(t[++i]?"boolean"===a?e[o]=K(t[i]):"number"===a?e[o]=+t[i]:a.indexOf("]")>=0?e[o]=t[i].split(","):e[o]=t[i]:(U(2,`[config] Missing value for the '${s}' argument. Using the default value.`),r=!0)),e[o])),e)}r&&X();return e}(Y,o,R)),Y),shutdownCleanUp:ct,log:U,logWithStack:j,setLogLevel:e=>{e>=0&&e<=D.levelsDesc.length&&(D.level=e)},enableFileLogging:(e,t)=>{},mapToNewConfig:e=>{const t={};for(const[o,r]of Object.entries(e)){const e=_[o]?_[o].split("."):[];e.reduce(((t,o,i)=>t[o]=e.length-1===i?r:t[o]||{}),t)}return t},manualConfig:async r=>{let i={};t(r)&&(i=JSON.parse(e(r,"utf8")));const s=Object.keys(O).map((e=>({title:`${e} options`,value:e})));return c({type:"multiselect",name:"category",message:"Which category do you want to configure?",hint:"Space: Select specific, A: Select all, Enter: Confirm.",instructions:"",choices:s},{onSubmit:async(e,t)=>{let s=0,n=[];for(const e of t)O[e]=O[e].map((t=>({...t,section:e}))),n=[...n,...O[e]];return await c(n,{onSubmit:async(e,t)=>{if("moduleScripts"===e.name?(t=t.length?t.map((t=>e.choices[t])):e.choices,i[e.section][e.name]=t):i[e.section]=oe(Object.assign({},i[e.section]||{}),e.name.split("."),e.choices?e.choices[t]:t),++s===n.length){try{await o.writeFile(r,JSON.stringify(i,null,2),"utf8")}catch(e){j(1,e,`[config] An error occurred while creating the ${r} file.`)}return!0}}}),!0}})},printLogo:t=>{const o=JSON.parse(e(n(M,"package.json"))).version;t?console.log(`Starting Highcharts Export Server v${o}...`):console.log(e(M+"/msg/startup.msg").toString().bold.yellow,`v${o}\n`.bold)},printUsage:X};export{pt as default};
//# sourceMappingURL=index.esm.js.map
